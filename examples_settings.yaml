# Доступные зачеия Explorers:
# ClientLic - Клиентские лицензии
# AvailablePerformance - Доступная производительность (через RAC)
# SheduleJob - Проверка галки "блокировка регламентных заданий"
# Session - Сеансы
# Connect - Соединения
# SessionsData - различные показарели из консоли 1с  (через RAC)
# ProcData - Данные поцессов (получается из ОС, пока поддерживается только linux)
# CPU - загрузка ЦПУ
# disk - метрики дикска, пока только linux и WeightedIO
# Property - доп. свойства, у каждой метрики свои могут быть.
# у ProcData доп. свойство processes определяет список процессов которые нужно мониторить
# у всех метрик доп. свойство timerNotify время опроса в секундах (через какой интервал будут запрашиваться метрики). Если не задан по дефолту 10 сек.
Explorers:
  - Name: ClientLic
    Property:
      timerNotify: 60
  - Name: AvailablePerformance
    Property:
      timerNotify: 10
  - Name: Processes
    Property:
      timerNotify: 10
  - Name: CPU
    Property:
      timerNotify: 10
  - Name: disk
    Property:
      timerNotify: 10
  - Name: SheduleJob
    Property:
      timerNotify: 10
  - Name: Session
    Property:
      timerNotify: 60
  - Name: Connect
    Property:
      timerNotify: 60
  - Name: SessionsData
    Property:
      timerNotify: 10


# http сервис который возвращает массив json с кредами к БД
# нужно для метрики SheduleJob
# пример json:
#[
#  {
#    "Name": "hrmcorp-n17",
#    "UserName": "",
#    "UserPass": ""
#  }
#]
DBCredentials: # Не обязательный параметр
  URL: http://ca-fr-web-1/fresh/int/sm/hs/PTG_SysExchange/GetDatabase
  User: ""
  Password: ""
  TLSSkipVerify: true # если true при обращении к сервису будут игнорироваться ошибки проверки сертификата

RAC:
  Path: "C:\\Program Files\\1cv8\\8.3.21.1644\\bin\\rac.exe"
  Port: "1545"      # Не обязательный параметр
  Host: "localhost" # Не обязательный параметр
  Login: ""         # Не обязательный параметр
  Pass: ""          # Не обязательный параметр

LogDir:        # Если на задан логи будут писаться в каталог с исполняемым файлом
LogLevel:  5   # Уровень логирования от 2 до 5, где 2 - ошибка, 3 - предупреждение, 4 - информация, 5 - дебаг
