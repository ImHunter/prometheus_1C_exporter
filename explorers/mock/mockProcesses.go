// Code generated by MockGen. DO NOT EDIT.
// Source: exporterProcesses.go

// Package mock_models is a generated GoMock package.
package mock_models

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	process "github.com/shirou/gopsutil/process"
)

// MockIProcessesInfo is a mock of IProcessesInfo interface.
type MockIProcessesInfo struct {
	ctrl     *gomock.Controller
	recorder *MockIProcessesInfoMockRecorder
}

// MockIProcessesInfoMockRecorder is the mock recorder for MockIProcessesInfo.
type MockIProcessesInfoMockRecorder struct {
	mock *MockIProcessesInfo
}

// NewMockIProcessesInfo creates a new mock instance.
func NewMockIProcessesInfo(ctrl *gomock.Controller) *MockIProcessesInfo {
	mock := &MockIProcessesInfo{ctrl: ctrl}
	mock.recorder = &MockIProcessesInfoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIProcessesInfo) EXPECT() *MockIProcessesInfoMockRecorder {
	return m.recorder
}

// Processes mocks base method.
func (m *MockIProcessesInfo) Processes() ([]*process.Process, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Processes")
	ret0, _ := ret[0].([]*process.Process)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Processes indicates an expected call of Processes.
func (mr *MockIProcessesInfoMockRecorder) Processes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Processes", reflect.TypeOf((*MockIProcessesInfo)(nil).Processes))
}
