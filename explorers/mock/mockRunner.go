// Code generated by MockGen. DO NOT EDIT.
// Source: baseExporter.go

// Package mock_models is a generated GoMock package.
package mock_models

import (
	exec "os/exec"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRunner is a mock of IRunner interface.
type MockIRunner struct {
	ctrl     *gomock.Controller
	recorder *MockIRunnerMockRecorder
}

// MockIRunnerMockRecorder is the mock recorder for MockIRunner.
type MockIRunnerMockRecorder struct {
	mock *MockIRunner
}

// NewMockIRunner creates a new mock instance.
func NewMockIRunner(ctrl *gomock.Controller) *MockIRunner {
	mock := &MockIRunner{ctrl: ctrl}
	mock.recorder = &MockIRunnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRunner) EXPECT() *MockIRunnerMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockIRunner) Run(cmd *exec.Cmd) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", cmd)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Run indicates an expected call of Run.
func (mr *MockIRunnerMockRecorder) Run(cmd interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockIRunner)(nil).Run), cmd)
}
